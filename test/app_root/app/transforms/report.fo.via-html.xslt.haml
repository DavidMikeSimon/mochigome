-# FIXME Do this with xsl:attribute-set instead
- block_attrs = {"font-family" => "Helvetica", "font-size" => "10pt", "start-indent" => "0pt", "end-indent" => "0pt"}
- h_block_attrs = {"font-family" => "Helvetica", "space-before" => "6pt", "space-after" => "6pt"}
- footer_block_attrs = block_attrs.merge({"font-size" => "9pt", "text-align" => "center"})

!!! XML
%xsl:stylesheet(version="1.0"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
xmlns:fo="http://www.w3.org/1999/XSL/Format")

  %xsl:template(match="/env/context")
    -# Nothing

  %xsl:template{:match => "/env/div[#{help.xpath_class("report")}]"}
    %fo:root
      %fo:layout-master-set
        %fo:simple-page-master(master-name="content-page"
        page-width="8.5in"
        page-height="11in"
        margin-top="0.25in"
        margin-bottom="0.25in"
        margin-left="0.4in"
        margin-right="0.4in")
          %fo:region-body(margin-top="0.25in" margin-bottom="0.25in")
          %fo:region-before(extent="0.1in")
          %fo:region-after(extent="0.1in")

      %fo:bookmark-tree
        %xsl:apply-templates(select="div[@id='floating-sidebar']/span/ul/li")

      %fo:page-sequence(master-reference="content-page")
        %fo:static-content(flow-name="xsl-region-before")
          %fo:block{footer_block_attrs}
            %xsl:value-of(select="/env/context/report_name")
        %fo:static-content(flow-name="xsl-region-after")
          %fo:block{footer_block_attrs}
            Page
            %fo:page-number
        %fo:flow(flow-name="xsl-region-body")
          %xsl:apply-templates(select="div[#{help.xpath_class("report-header")}]")
          %xsl:apply-templates(select="img[#{help.xpath_class("chart")}]")
          %xsl:apply-templates(select="div[#{help.xpath_class("node")}]")

  %xsl:template{:match => "img[#{help.xpath_class("chart")}]"}
    %fo:block{block_attrs.merge({"margin-left" => "18pt", "padding" => "4px"})}
      %fo:external-graphic(content-height="scale-to-fit" content-width="scale-to-fit" scaling="uniform")
        %xsl:attribute(name="src")
          %xsl:value-of(select="@src")
        %xsl:attribute(name="width")
          -# FIXME This scaling results in ugly images...
          %xsl:value-of(select="concat((number(@width) div 100), 'in')")

  %xsl:template{:match => "div[#{help.xpath_class("node")}]"}
    %fo:block{block_attrs.merge({"margin-left" => "18pt", "padding" => "4px"})}
      %xsl:attribute(name="id")
        %xsl:value-of(select="div[#{help.xpath_class("internal-jump-handle")}]/@id")
      %xsl:choose
        %xsl:when{:test => help.xpath_class("subtable-node")}
          %xsl:attribute(name="border") solid 1px black
          %xsl:attribute(name="margin-bottom") 15px
        %xsl:otherwise
          %xsl:attribute(name="border-left") solid 1px gray
          %xsl:attribute(name="margin-bottom") 8pt
      %xsl:apply-templates

  %xsl:template{:match => "div[#{help.xpath_class("bad-print-warning")}]"}
    -# Nothing

  %xsl:template{:match => "div[#{help.xpath_class("report-header")}]"}
    %fo:block{block_attrs.merge({"margin-left" => "18pt", "padding" => "4px"})}
      %xsl:apply-templates

  %xsl:template(match="h1|h2|h3|h4|h5|h6")
    %fo:block{h_block_attrs}
      %xsl:choose
        %xsl:when(test="name()='h1'")
          %xsl:attribute(name="font-size") 240%
        %xsl:when(test="name()='h2'")
          %xsl:attribute(name="font-size") 200%
        %xsl:when(test="name()='h3'")
          %xsl:attribute(name="font-size") 170%
        %xsl:when(test="name()='h4'")
          %xsl:attribute(name="font-size") 150%
        %xsl:when(test="name()='h5'")
          %xsl:attribute(name="font-size") 135%
        %xsl:when(test="name()='h6'")
          %xsl:attribute(name="font-size") 120%
      %xsl:apply-templates

  %xsl:template(match="table")
    %xsl:if(test="count(*/tr|*/td)>0")
      %fo:table(table-layout="fixed")
        %xsl:choose
          %xsl:when(test="count(tbody/tr[last()]/td) = 1")
            %fo:table-column(column-width="proportional-column-width(1)")
          %xsl:otherwise
            %fo:table-column(column-width="2in")
            %xsl:for-each(select="tbody/tr[last()]/td[position() > 1]")
              %fo:table-column(column-width="proportional-column-width(1)")
        %xsl:apply-templates

  %xsl:template(match="thead")
    %fo:table-header{"start-indent" => "0pt", "end-indent" => "0pt"}
      %xsl:attribute(name="keep-together.within-page") always
      %xsl:apply-templates

  %xsl:template(match="tbody")
    %fo:table-body{"start-indent" => "0pt", "end-indent" => "0pt"}
      %xsl:apply-templates

  %xsl:template(match="tr[#{help.xpath_class("subtable-name-row")}]")
    %fo:table-row
      %xsl:apply-templates
        %xsl:with-param(name="tr-cls" select="'subtable-name-row'")

  %xsl:template(match="tr[#{help.xpath_class("header-row")}]")
    %fo:table-row
      %xsl:apply-templates
        %xsl:with-param(name="tr-cls" select="'header-row'")

  %xsl:template(match="tr[#{help.xpath_class("subtable-datum-row")}]")
    %fo:table-row
      %xsl:apply-templates
        %xsl:with-param(name="tr-cls" select="'subtable-datum-row'")

  %xsl:template(match="tr")
    %xsl:variable(name="rownum")
      %xsl:number
    %fo:table-row
      -# The code below doesn't do what I was hoping; it does prevent
      -# widowing of the first ten rows, but then the un-widowed
      -# section just runs right through the footer and off the
      -# page. :-\
      -#%xsl:if(test="$rownum < 10")
        -#%xsl:attribute(name="keep-with-previous.within-page") always
      %xsl:apply-templates
        %xsl:with-param(name="tr-cls" select="'detail-row'")

  %xsl:template(match="td|th")
    %xsl:param(name="tr-cls")
    %fo:table-cell(border="1px solid gray")
      %xsl:if(test="@colspan")
        %xsl:attribute(name="number-columns-spanned")
          %xsl:value-of(select="@colspan")
      %xsl:if(test="name()='th'")
        %xsl:attribute(name="font-style") italic
      %xsl:if(test="$tr-cls='subtable-name-row'")
        %xsl:attribute(name="background-color") #eee
      %xsl:if(test="$tr-cls='header-row'")
        %xsl:attribute(name="background-color") #ddd
      %xsl:if(test="$tr-cls='subtable-datum-row'")
        %xsl:attribute(name="background-color") #ddd
        %xsl:attribute(name="font-weight") bold
      %fo:block{block_attrs.merge({"padding" => "2pt", "margin-left" => "2pt"})}
        %xsl:apply-templates

  %xsl:template(match="li[#{help.xpath_class("toc-item")}]")
    %fo:bookmark
      %xsl:attribute(name="internal-destination")
        -# Remove the hash symbol from the HTML internal href
        %xsl:value-of(select="substring(a/@href, 2)")
      %fo:bookmark-title
        %xsl:value-of(select="a")
      %xsl:apply-templates(select="ul/li")

  %xsl:template(match="li")
    %fo:block{block_attrs.merge({"start-indent" => "25pt"})}
      %xsl:apply-templates

  %xsl:template(match="label")
    %fo:inline()
      %xsl:apply-templates
      \:
